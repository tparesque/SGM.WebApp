var pages = pages || {};
pages.isencaoIPTU = pages.isencaoIPTU || {};

pages.isencaoIPTU.model = function () {    

    var vmSolicitacao = function (solicitacao) {
        var self = this;

        self.solicitacaoId = ko.observable();
        self.usuarioId = ko.observable();
        self.usuarioNome = ko.observable();
        self.matricula = ko.observable();
        self.observacao = ko.observable();
        self.justificativaPrefeitura = ko.observable();
        self.situacao = ko.observable();
        self.situacaoNome = ko.observable();
        self.dataCadastro = ko.observable();        
        self.historicoSolicitacoes = ko.observableArray([]);

        if (solicitacao) {
            self.solicitacaoId(solicitacao.solicitacaoId);
            self.usuarioId(solicitacao.usuarioId);
            self.usuarioNome(solicitacao.usuarioNome);
            self.matricula(solicitacao.matricula);
            self.observacao(solicitacao.observacao);
            self.justificativaPrefeitura(solicitacao.justificativaPrefeitura);
            self.situacao(solicitacao.situacao);
            self.situacaoNome(solicitacao.situacaoNome);
            self.dataCadastro(solicitacao.dataCadastro);            

            solicitacao.historicoSolicitacoes.forEach(function (item) {
                self.historicoSolicitacoes.push(new vmHistoricoSolicitacao(item));
            });
        }
    };

    var vmHistoricoSolicitacao = function (historicoSolicitacao) {
        var self = this;

        self.historicoSolicitacaoId = ko.observable(historicoSolicitacao.historicoSolicitacaoId);
        self.usuarioAlteracaoId = ko.observable(historicoSolicitacao.usuarioAlteracaoId);
        self.usuarioAlteracaoNome = ko.observable(historicoSolicitacao.usuarioAlteracaoNome);
        self.situacaoId = ko.observable(historicoSolicitacao.situacaoId);
        self.situacaoNome = ko.observable(historicoSolicitacao.situacaoNome);
        self.dataAlteracao = ko.observable(historicoSolicitacao.dataAlteracao);
    };

    return {   
        vmSolicitacao
    };
}();
var pages = pages || {};
pages.isencaoIPTU = pages.isencaoIPTU || {};

pages.isencaoIPTU.services = function () {  

    var obterTodos = function () {
        var url = pages.metadata.actionUrl("/api/gateway/solicitacao/isencao-iptu");
        return pages.dataServices.get(url);
    }

    var salvar = function (parametro) {
        var url = pages.metadata.actionUrl("/api/gateway/solicitacao/isencao-iptu");
        return pages.dataServices.postAjax(url, parametro);
    }  

    var obterSolicitacaoId = function (solicitacaoId) {
        var url = pages.metadata.actionUrl("/api/gateway/solicitacao/isencao-iptu/" + solicitacaoId);
        return pages.dataServices.get(url);
    }

    return {  
        obterTodos,
        salvar,
        obterSolicitacaoId
    };
}();
var pages = pages || {};
pages.isencaoIPTU = pages.isencaoIPTU || {};
pages.isencaoIPTU.model = pages.isencaoIPTU.model || {};
pages.isencaoIPTU.services = pages.isencaoIPTU.services || {};

pages.metadata = pages.metadata || {};
pages.dataServices = pages.dataServices || {};
pages.utils = pages.utils || {};

pages.isencaoIPTU.cadastroViewModel = function () {   
    var model = pages.isencaoIPTU.model;
    var service = pages.isencaoIPTU.services;
   
    ko.applyBindings(new function () {
        var self = this;       
        
        self.solicitacao = ko.observable(new model.vmSolicitacao());         
        self.bloqueiaSalvar = ko.observable(false);  

        self.init = function () {  
          
        };      


        self.validar = function () {
            var mensagens = [];

            if (isNullOrEmptyOrWriteSpace(self.solicitacao().matricula()))
                mensagens.push("<strong>Matrícula</strong> é obrigatória!");

            if (mensagens.any()) {
                bootbox.alert(mensagens.join("</br>"));
                return false;
            }
            return true;
        };

        self.salvar = function () {

            if (!self.validar()) { return; }

            var parametro = {                
                usuarioId: self.solicitacao().usuarioId(),                
                observacao: self.solicitacao().observacao(),
                matricula: self.solicitacao().matricula()
            };

            pages.dataServices.bloquearTela();
            service.salvar(parametro).then(function () {                
                bootbox.alert("Solicitação salva com sucesso!", function () {
                    self.voltar();
                }); 
            }).catch(function (result) {
                if (result.exibeMensagem)
                    bootbox.alert(result.data);

                self.bloqueiaSalvar(false);                
            }).finally(function () {
                pages.dataServices.desbloquearTela();
            });
        };

        self.voltar = function () {
            pages.dataServices.bloquearTela();
            window.location.href = "/IsencaoIPTU/Index";
        };

        self.init();

    }, bindingBody);
}();